{"version":3,"file":"static/js/707.35a4a231.chunk.js","mappings":"uQACA,GAAgB,OAAS,6BAA6B,aAAe,mCAAmC,OAAS,6BAA6B,IAAM,0BAA0B,QAAU,8BAA8B,WAAa,iCAAiC,SAAW,+BAA+B,WAAa,iCAAiC,KAAO,4B,SCAnW,EAAuB,yB,SCEVA,EAAW,WAAM,IAAD,IAEnBC,EAAQ,qBADCC,EAAAA,EAAAA,MACSC,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAEvC,OAAQ,0BACJ,SAAC,KAAD,CAAMC,GAAIJ,EAAUK,UAAWC,EAA/B,sBAEP,ECDc,SAASC,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWd,EAAAA,EAAAA,MACTe,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBP,GAAW,GACXE,EAAS,MAHQ,UAKIM,EAAAA,EAAAA,IAAgBJ,GALpB,OAKXK,EALW,OAMjBX,EAASW,GANQ,gDAQjBP,EAAS,EAAD,IARS,yBAUjBF,GAAW,GAVM,4EAAH,qDAalBO,GACD,GAAE,CAACH,IAEJ,IACMM,EADgBP,EAASQ,SAASC,SAAS,QACnB,kBAAcR,GAAd,kBAAqCA,EAArC,SAExBS,EADkBV,EAASQ,SAASC,SAAS,WACjB,kBAAcR,GAAd,kBAAqCA,EAArC,YAC5Bb,EAAI,oBAAGY,EAASb,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAErC,OACE,iBAAKE,UAAWC,EAAAA,UAAhB,WACG,SAACP,EAAD,IACAY,IAAW,SAACe,EAAA,EAAD,IACXb,IAAS,gDACTJ,IACC,iBAAKJ,UAAWC,EAAAA,aAAhB,WACE,gBAAKD,UAAWC,EAAAA,OAAhB,UACE,gBAAKD,UAAWC,EAAAA,IAASqB,IAAKlB,EAAMmB,YAAN,yCAAsDnB,EAAMmB,aAAgBC,EAAOC,IAAI,cAEvH,iBAAKzB,UAAWC,EAAAA,QAAhB,WACE,wBAAKG,EAAMsB,SACX,mDAAyC,GAArBtB,EAAMuB,cAAmBC,QAAQ,IAArD,QACA,sCACA,iCAAOxB,EAAMyB,aACb,oCACA,iCAAOzB,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,WAClD,iBAAKlC,UAAWC,EAAAA,WAAhB,WACE,oDACA,SAAC,KAAD,CAAMD,UAAWC,EAAAA,SAAcJ,MAAO,CAAEC,KAAAA,GAAQC,GAAIkB,EAAUkB,SAAO,EAArE,mBACA,SAAC,KAAD,CAAMnC,UAAWC,EAAAA,WAAgBJ,MAAO,CAAEC,KAAAA,GAAOC,GAAIqB,EAAYe,SAAO,EAAxE,+BAKR,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAChB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/pages/ButtonBack/ButtonBack.module.css?6228","pages/ButtonBack/ButtonBack.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__uXZxd\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"boxImg\":\"MovieDetails_boxImg__za2cX\",\"img\":\"MovieDetails_img__uOAom\",\"boxInfo\":\"MovieDetails_boxInfo__Plu-D\",\"boxAddInfo\":\"MovieDetails_boxAddInfo__Tw1XK\",\"castLink\":\"MovieDetails_castLink__U3a0A\",\"reviewLink\":\"MovieDetails_reviewLink__gtr-m\",\"link\":\"MovieDetails_link__U+v+7\"};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ButtonBack_link__x-1TP\"};","import { Link, useLocation } from \"react-router-dom\";\nimport css from \"./ButtonBack.module.css\";\n\nexport const ButtonBack=()=> {\n    const location=useLocation();\n    const backLink=location.state?.from ?? '/';\n\n    return (<div>\n        <Link to={backLink} className={css.link} >Go back</Link>\n           </div>)\n}\n\n;","import { Outlet, useParams, Link, useLocation} from \"react-router-dom\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { getMovieDetails } from \"shared/Api/Api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport css from \"./MovieDetails.module.css\";\nimport noImg from \"..//..//img/No-picture-available.png\";\nimport { ButtonBack }  from 'pages/ButtonBack/ButtonBack';\n\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const { movieId } = useParams();\n  \n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const result = await getMovieDetails(movieId);\n        setMovie(result);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    }\n    movieDetails();\n  }, [movieId])\n\n  const isCastDetails = location.pathname.includes(\"cast\");\n  const castLink = isCastDetails ? `/movies/${movieId}` : `/movies/${movieId}/cast`;\n  const isReviewDetails = location.pathname.includes(\"reviews\");\n  const reviewLink = isReviewDetails ? `/movies/${movieId}` : `/movies/${movieId}/reviews`;\n  const from = location.state?.from ?? \"/\";\n\n  return (\n    <div className={css.container}>\n       <ButtonBack />\n      {loading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {movie && (\n        <div className={css.movieDetails}>\n          <div className={css.boxImg}>\n            <img className={css.img} src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : noImg} alt=\"poster\" />\n          </div>\n          <div className={css.boxInfo}>\n            <h2>{movie.title}</h2>\n            <p>User Score: {`${(movie.vote_average * 10).toFixed(1)}`}%</p>\n            <h3>Overview</h3>\n            <p>{`${movie.overview}`}</p>\n            <h3>Genres</h3>\n            <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n            <div className={css.boxAddInfo}>\n              <h2>Additional information</h2>\n              <Link className={css.castLink} state={{ from }} to={castLink} replace>Cast</Link>\n              <Link className={css.reviewLink} state={{ from}} to={reviewLink} replace>Reviews</Link>\n            </div>\n          </div>\n        </div>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  )\n}\n\n\n/*\nconst goBack = () => navigate(-1);\nconst isCastDetails = location.pathname.includes(\"cast\");\nconst castLink = isCastDetails ? `/movies/${movieId}` : `/movies/${movieId}/cast`;\nconst isReviewDetails = location.pathname.includes(\"reviews\");\nconst reviewLink = isReviewDetails ? `/movies/${movieId}` : `/movies/${movieId}/reviews`;\n\n  return (\n    <div className={css.container}>\n      <button className={css.button} onClick={goBack}>Go back</button>\n      {loading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {movie && (\n      <div className={css.movieDetails}>\n          <div className={css.boxImg}>\n            <img className={css.img} src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : noImg} alt=\"poster\"/>\n          </div>\n          <div className={css.boxInfo}>\n            <h2>{movie.title}</h2>\n            <p>User Score: {`${(movie.vote_average * 10).toFixed(1)}`}%</p>\n            <h3>Overview</h3>\n            <p>{`${movie.overview}`}</p>\n            <h3>Genres</h3>\n            <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n            <div className={css.boxAddInfo}>\n            <h2>Additional information</h2>\n            <Link className={css.castLink} state={{from}} to={castLink} replace>Cast</Link>\n            <Link className={css.reviewLink} state={{from}} to={reviewLink} replace>Reviews</Link>\n          </div>\n          </div>\n      </div>\n      )}\n      <Suspense fallback={<Loader />}>\n      <Outlet/> \n      </Suspense>\n    </div>\n  )\n} \n*/"],"names":["ButtonBack","backLink","useLocation","state","from","to","className","css","MovieDetails","useState","movie","setMovie","loading","setLoading","error","setError","location","movieId","useParams","useEffect","movieDetails","getMovieDetails","result","castLink","pathname","includes","reviewLink","Loader","src","poster_path","noImg","alt","title","vote_average","toFixed","overview","genres","map","genre","name","join","replace","Suspense","fallback"],"sourceRoot":""}